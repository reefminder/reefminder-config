server:
  port: 8765

authserver:
    hostname: localhost
    port: 8899
    contextPath: userauth
    
zuul:
  routes:
    user-service: /api/user/**
    reef-service: /api/reef/**
    web-portal: /**
    user: 
      path: /api/loggedinuser/**
      stripPrefix: true
      url: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    
spring:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      clientId: client
      clientSecret: secret

    resource: 
      userInfoUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/me
      preferTokenInfo: false 
    
    data:
      mongodb.host: localhost
      mongodb.port: 12345
      mongodb.uri: mongodb://localhost/auth
      mongo.repositories.enabled: true

---
# Auth-server instance when used on Docker
spring:
  profiles: docker
  
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://192.168.59.103:8761/eureka/
      
authserver:
    hostname: 192.168.59.103
    port: 8899
    contextPath: userauth
    
server:
  port: 8080